#_page40_

"""Алгоритм основывается на поиске ключа в энном количестве вложенных коробок и предельно прост
1. Сделать кучу коробок 
2. Вытащить коробку и осмотреть ее
3. Если внутри коробка, добавить ее в кучу
4. Если нашли ключ, конец!
5. Повторить
Можно использовать очередь, добавляя новые коробки, тем самым задавая точный порядок следования коробок
"""

def look_for_key(main_box):
	pile = main_box.make_a_pile_to_look_through()
	while pile is not empty:
 		box = pile.grab_a_box()
 		for item in box:
 			if item.is_a_box():
 				pile.append(item)
 			elif item.is_a_key():
 				print “found the key!”


"""
Алгоритм основывается на рекурсивном вызове функции проверки, найден ли ключ или коробка.
1. Просмотреть коробку
2. Если найдена коробка, то перейти к 1.
3. Если найден ключ, конец!
"""

def look_for_key(box):
	for item in box:
  	if item.is_a_box():
    	look_for_key(item) Recursion!
  	elif item.is_a_key():
    	print “found the key!”
"""
В основе абстракции примеров лежит класс, описывающий коробку, функции проверки.
Недостатком этих алгоритмов можно выделить уверенность автора в том, что ключ рано или поздно все-таки будет найден, а следовательно, 
отсутствие рассмотрения такого случая.
"""
